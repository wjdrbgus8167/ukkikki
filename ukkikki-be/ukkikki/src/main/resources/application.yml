server:
  port: 9443
  servlet:
    contextPath: /api/v1
  ssl:
    key-store: ${KEY_STORE_PATH}
    key-store-password: ${KEY_STORE_PASSWORD}
    key-alias: i12c204_ssl
    enabled: true

spring:
  h2:
    console:
      enabled: true
      path: /h2-console

  datasource:
    url: jdbc:mysql://${MYSQL_URL}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    generate-ddl: 'true'
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        show_sql: true
        format_sql: true
        use_sql_comments: true
    defer-datasource-initialization: true

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            scope: profile_nickname, profile_image, account_email
            provider: kakao
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            scope: profile, email
            provider: google
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          google:
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo

  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379

    mongodb:
      uri: mongodb://${MONGO_HOST}:${MONGO_PORT}/${MONGO_DATABASE}

  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      region:
        static: ap-northeast-2
      s3:
        bucket: ${AWS_S3_BUCKET_NAME}
  sql:
    init:
      mode: always
      data-locations: classpath:data.sql

logging:
  level:
    root: info
    org.springframework.data.redis: INFO
    io.lettuce.core: INFO

jwt:
  secret_key: ${JWT_SECRET_KEY}
  access_expiration: 86400000
  refresh_expiration: 604800000

app:
  domain: ${REDIS_HOST}

